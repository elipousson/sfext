% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coords_to_sf.R
\name{coords_to_sf}
\alias{coords_to_sf}
\alias{check_coords}
\alias{rev_coords}
\alias{has_coords}
\alias{format_coords}
\alias{separate_coords}
\title{Convert a data.frame with one or more coordinate columns to an sf object}
\usage{
coords_to_sf(
  x,
  coords = c("lon", "lat"),
  into = NULL,
  sep = ",",
  rev = FALSE,
  remove_coords = FALSE,
  crs = 4326,
  call = caller_env()
)

check_coords(
  x = NULL,
  coords = NULL,
  default = c("lon", "lat"),
  rev = FALSE,
  call = caller_env()
)

rev_coords(coords, pattern = c("lat", "^y"), ignore.case = TRUE)

has_coords(x, coords = NULL, value = TRUE)

format_coords(
  x,
  coords = c("lon", "lat"),
  keep_missing = FALSE,
  call = caller_env()
)

separate_coords(x, coords, into = c("lon", "lat"), sep = ",")
}
\arguments{
\item{x}{A data.frame with one or more coordinate columns. If coordinates are
contained within a single column, coord must be length 1 and a length 2
into parameter must be provided.}

\item{coords}{Coordinate columns for input data.frame or output sf object (if
geometry is 'centroid' or 'point') Default: c("lon", "lat").}

\item{into}{If coords is a single column name with both longitude and
latitude, \code{into} is used as the names of the new columns that coords is
separated into. Passed to \code{\link[tidyr:separate]{tidyr::separate()}}.}

\item{sep}{If coords is a single column name with both longitude and
latitude, \code{sep} is used as the separator between coordinate values. Passed
to \code{\link[tidyr:separate]{tidyr::separate()}}.}

\item{rev}{If \code{TRUE}, reverse \code{c("lat", "lon")} coords to \code{c("lon", "lat")}.
\code{\link[=check_coords]{check_coords()}} only.}

\item{remove_coords}{For \code{\link[=df_to_sf]{df_to_sf()}}, if \code{TRUE}, remove the coordinate columns
after converting a data frame to simple feature object; defaults to
\code{FALSE}.}

\item{crs}{Coordinate reference system used by the coordinates in the
provided data frame.}

\item{call}{call used to improve error messages when used internally.
Defaults to \code{\link[rlang:stack]{rlang::caller_env()}}}

\item{default}{Default coordinate values; defaults to \code{c("lon", "lat")}.}

\item{pattern}{Pattern passed by \code{\link[=rev_coords]{rev_coords()}} to \code{\link[=grepl]{grepl()}} used to match
vectors that are reversed. Defaults to \code{c("lat", "^y")}.}

\item{ignore.case}{If \code{TRUE}, pattern matching is not case sensitive.}

\item{value}{If \code{TRUE}, return the value of the coordinate column names. Used
by \code{\link[=has_coords]{has_coords()}}.}

\item{keep_missing}{If \code{TRUE}, keep rows with missing coordinate values.
Defaults to \code{FALSE} which filters out rows with missing coordinates.}
}
\description{
\itemize{
\item \code{\link[=coords_to_sf]{coords_to_sf()}}: Convert a data frame with coordinates into a simple
feature object
\item \code{\link[=check_coords]{check_coords()}}: Check if a provided vector with coordinate column names
are valid for the provided data frame
\item \code{\link[=separate_coords]{separate_coords()}}: Separate coordinates from a single combined column
into two columns
\item \code{\link[=format_coords]{format_coords()}}: Format coordinates as numeric values and remove missing
coordinates from a data.frame
\item \code{\link[=has_coords]{has_coords()}}: Suggests a coordinate pair by comparing common values to
the column names for a provided data.frame
\item \code{\link[=rev_coords]{rev_coords()}}: Reverse a vector of coordinate names if the text "lat" or
"y" appears in the first position
}
}
\seealso{
\code{\link[=is_geo_coords]{is_geo_coords()}}
}
