% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/st_filter_ext.R
\name{st_filter_ext}
\alias{st_filter_ext}
\title{Filter, crop, trim, or erase simple feature or}
\usage{
st_filter_ext(
  x,
  y = NULL,
  crop = FALSE,
  trim = FALSE,
  erase = FALSE,
  crs = NULL,
  .predicate = sf::st_intersects,
  null.ok = TRUE,
  ...
)
}
\arguments{
\item{x, y}{A \code{sf}, \code{sfc}, or \code{bbox} object. x may also be a \code{sf} list
objects. If x is an \code{sf} list, additional parameters in ... will be ignored.}

\item{crop}{If \code{TRUE}, x is cropped to y using \code{\link[sf:st_crop]{sf::st_crop()}}.}

\item{trim}{If \code{TRUE}, x is trimmed to y with \code{\link[=st_trim]{st_trim()}}.}

\item{erase}{If \code{TRUE}, x is erased by y with \code{\link[=st_erase]{st_erase()}}.}

\item{.predicate}{geometry predicate function with the same profile as
\code{\link[sf:geos_binary_pred]{sf::st_intersects()}}; see details for \code{\link[sf:st_join]{sf::st_filter()}} for more options.}

\item{null.ok}{If y is \code{NULL} and null.ok is \code{TRUE}, x is returned without
changes. Defaults to \code{TRUE}.}

\item{...}{
  Arguments passed on to \code{\link[sf:st_join]{sf::st_filter}}
  \describe{
    \item{\code{}}{}
  }}
}
\description{
Filter, crop, trim, or erase simple feature or
}
