% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bind_sf_col.R
\name{bind_sf_col}
\alias{bind_sf_col}
\alias{bind_boundary_col}
\alias{bind_units_col}
\title{Bind columns based on \code{sf} objects:}
\usage{
bind_boundary_col(x, boundary = NULL, join = NULL, col = "name", ...)

bind_units_col(
  x,
  y,
  units = NULL,
  drop = FALSE,
  keep_all = TRUE,
  .id = NULL,
  call = caller_env()
)
}
\arguments{
\item{boundary}{An sf object with a column named "name" or a list of sf
objects where all items in the list have a "name" column.}

\item{join}{geometry predicate function; defaults to \code{NULL}, set to
\link[sf:geos_binary_pred]{sf::st_intersects} if key_list contains only POLYGON or MULTIPOLYGON objects
or \link[sf:st_nearest_feature]{sf::st_nearest_feature} if key_list contains other types.}

\item{col}{Column name used to convert boundary into a \code{sf} list and contains
the values that should be added as a column to the input \code{sf} object.}

\item{y}{Vector of numeric or units values to bind to x.}

\item{units}{Units to use for y (if numeric) or convert to (if y is units
class); defaults to \code{NULL}.}

\item{drop}{If \code{TRUE}, apply the \link[units:drop_units]{units::drop_units} function to the column
with units class values and return numeric values instead; defaults to
\code{FALSE}.}

\item{keep_all}{If \code{FALSE}, keep all columns. If \code{FALSE}, return only the
named .id column.}

\item{.id}{Name to use for vector of units provided to "y" parameter, when
"y" is bound to the "x" data frame or tibble as a new column.}
}
\description{
\link{bind_boundary_col} uses \link[sf:st_join]{sf::st_join} to assign simple feature data to an
enclosing polygon. This function with other join functions to add columns
based on other spatial relationships, e.g. bind a column for the nearest
point feature.
}
