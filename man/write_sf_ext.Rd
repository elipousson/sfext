% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_sf_ext.R
\name{write_sf_ext}
\alias{write_sf_ext}
\alias{write_sf_cache}
\alias{write_sf_gist}
\alias{write_sf_gsheet}
\title{Write or cache a simple feature object to a file}
\usage{
write_sf_ext(
  data,
  name = NULL,
  label = NULL,
  prefix = NULL,
  postfix = NULL,
  filename = NULL,
  filetype = NULL,
  path = NULL,
  cache = FALSE,
  overwrite = FALSE
)

write_sf_cache(
  data,
  name = NULL,
  label = NULL,
  prefix = NULL,
  postfix = NULL,
  filename = NULL,
  filetype = NULL,
  data_dir = NULL,
  overwrite = FALSE
)

write_sf_gist(
  data,
  name = NULL,
  label = NULL,
  prefix = NULL,
  postfix = NULL,
  filename = NULL,
  filetype = "geojson",
  description = NULL,
  public = TRUE,
  browse = FALSE,
  token = Sys.getenv("GITHUB_PAT")
)

write_sf_gsheet(
  data,
  name = NULL,
  label = NULL,
  prefix = NULL,
  postfix = NULL,
  filename = NULL,
  sheet = 1,
  ask = FALSE,
  key = NULL,
  ...
)
}
\arguments{
\item{data}{\code{sf} object to write.}

\item{name}{Name to make file name converted to snake case with
\code{\link[janitor:make_clean_names]{janitor::make_clean_names()}}, e.g. "Residential zoning map" becomes
"residential_zoning_map"}

\item{label}{Label to combine with name converted to snake case with
\code{\link[janitor:make_clean_names]{janitor::make_clean_names()}}. The label is designed to identify the area
or other shared characteristics across multiple data files, maps, or plots.}

\item{prefix}{File name prefix. "date" adds a date prefix, "time" adds a
date/time prefix; defaults to \code{NULL}.}

\item{postfix}{File name postfix; defaults to \code{NULL}.}

\item{filename}{File name to use. If filename is provided and the data is an
\code{sf} object make sure to include the file type, e.g. "data.gpkg" or
"data.csv". Objects that are not simple features are written to RDS with
\code{\link[readr:read_rds]{readr::write_rds()}}.}

\item{filetype}{File type to write and cache, Default: \code{NULL} for
\code{write_sf_ext()}}

\item{path}{Path to file or data directory.}

\item{cache}{If \code{TRUE}, write \code{sf} object to file in cache directory;
defaults to \code{FALSE}.}

\item{overwrite}{Logical. Default \code{FALSE}. If \code{TRUE}, overwrite any existing
cached files that use the same file name.}

\item{data_dir}{cache data directory, defaults to
\code{\link[rappdirs:user_cache_dir]{rappdirs::user_cache_dir()}} when data_dir is \code{NULL}. (only used
for write_sf_cache; default is used when \code{cache = TRUE} for write_sf_ext)}

\item{description}{(character) Brief description of gist (optional)}

\item{public}{(logical) Whether gist is public (default: TRUE)}

\item{browse}{(logical) To open newly create gist in default browser
(default: TRUE)}

\item{token}{A personal access token on GitHub with permission to create
gists; defaults to Sys.getenv("GITHUB_PAT")}

\item{sheet}{Sheet to write into, in the sense of "worksheet" or "tab". You can identify a sheet by name, with a string, or by position, with a number.}

\item{ask}{If \code{TRUE}, the user is prompted to make revisions to the created
Google Sheet. When user responds to the prompt, the date is read back into
the environment using \link{read_sf_gsheet} and joined to the provided data with
the column name provided to key. Defaults to \code{FALSE}.}

\item{key}{If ask is \code{TRUE}, a key is required to join the sheet data to the
provided data.}

\item{...}{Further args passed on to \code{\link[crul]{verb-POST}}}
}
\description{
The write_sf_ext and write_sf_cache helper functions wrap the \link[sf:st_write]{sf::write_sf}
function to provide some additional options including consistent file naming
with \code{\link[=make_filename]{make_filename()}} and features including:
}
\details{
\itemize{
\item If the data is not an sf object, optionally save as an RDS file.
\item If filetype is "csv" or the filename ends in ".csv" the file is
automatically converted to a dataframe using \code{\link[=df_to_sf]{df_to_sf()}}; if file type is
"gsheet" the file is converted and turned into a new Google Sheet document
(if a Google account is authorized with the {googlesheets4} package using the
\code{\link[=write_sf_gsheet]{write_sf_gsheet()}} function.).
\item If cache is \code{TRUE} use write_sf_cache to cache file after writing a copy to
the path provided.
\item If data is a named sf list, pass the name of each sf object in the list to
the name parameter and keep all other parameters consistent to write a file
for each object in the list.
}
}
\seealso{
\code{\link[sf:st_write]{sf::st_write()}}
}
