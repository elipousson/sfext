% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/st_square.R
\name{st_square}
\alias{st_square}
\alias{st_square.default}
\alias{st_square.sfc}
\alias{st_square.sf}
\alias{st_square.bbox}
\alias{st_inscribed_square}
\title{Create a square within or around a simple feature object or collection}
\usage{
st_square(
  x,
  scale = 1,
  rotate = 0,
  inscribed = FALSE,
  by_feature = FALSE,
  call = caller_env()
)

\method{st_square}{default}(x, ...)

\method{st_square}{sfc}(
  x,
  scale = 1,
  rotate = 0,
  inscribed = FALSE,
  by_feature = FALSE,
  call = caller_env()
)

\method{st_square}{sf}(x, ..., by_feature = FALSE)

\method{st_square}{bbox}(x, ...)

st_inscribed_square(x, scale = 1, rotate = 0, by_feature = FALSE)
}
\arguments{
\item{x}{A \code{sf}, \code{sfc}, or \code{bbox} object or another object coercible to a
simple feature collection with \code{\link[=as_sfc]{as_sfc()}}.}

\item{scale}{numeric; scale factor, Default: 1}

\item{rotate}{numeric; degrees to rotate (-360 to 360), Default: 0}

\item{inscribed}{If \code{TRUE}, the returned geometry is inscribed within x, if
\code{FALSE} (default), the geometry is circumscribed.}

\item{by_feature}{If \code{TRUE}, create new geometry for each feature. If
\code{FALSE}, create new geometry for all features combine with
\code{\link[=st_union_ext]{st_union_ext()}}.}

\item{call}{The execution environment of a currently
running function, e.g. \code{caller_env()}. The function will be
mentioned in error messages as the source of the error. See the
\code{call} argument of \code{\link[rlang:abort]{abort()}} for more information.}
}
\description{
Get a circumscribed square or approximate inscribed square in a \code{sf} object.
If inscribed is \code{TRUE}, the square geometry returned may not be contained
wholly within the original geometry. The inscribed square is created from the
bounding box of an inscribed circle rotated 45 degrees.
}
\examples{
nc <- sf::read_sf(system.file("shape/nc.shp", package = "sf"))
nc <- sf::st_transform(nc, crs = 3857)

plot(st_square(nc), max.plot = 1)
plot(st_square(nc[1:10,], by_feature = TRUE), max.plot = 1)

}
