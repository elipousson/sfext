% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_data_dir.R
\name{get_data_dir}
\alias{get_data_dir}
\alias{list_data_files}
\title{Check if data directory exists and create a new directory if needed}
\usage{
get_data_dir(
  path = NULL,
  cache = FALSE,
  create = TRUE,
  pkg = "sfext",
  allow_null = TRUE
)

list_data_files(
  path = NULL,
  pkg = "sfext",
  cache = FALSE,
  fileext = NULL,
  pattern = NULL,
  full.names = TRUE,
  ignore.case = TRUE,
  ...
)
}
\arguments{
\item{path}{Path to directory for use as data directory.}

\item{cache}{If \code{TRUE}, and path is \code{NULL} set path to
\link[rappdirs:user_cache_dir]{rappdirs::user_cache_dir} (using value of pkg as appname). If path is not
\code{NULL}, the path is returned even if cache is \code{TRUE}.}

\item{create}{If \code{FALSE} and path does not exist, return path with a warning.
If \code{TRUE} and \link[rlang:is_interactive]{rlang::is_interactive} is \code{TRUE}, ask user if directory
should be created. If the session not interactive and create is \code{TRUE}, a
new directory will be created.}

\item{pkg}{Package name; defaults to "sfext"}

\item{allow_null}{If \code{TRUE}, path is \code{NULL}, cache is \code{FALSE}, return the \code{NULL}
path value; defaults to \code{TRUE}.}

\item{fileext}{If pattern is NULL, fileext is used to set the pattern and
filter listed files to those matching the file extension.}

\item{pattern}{an optional \link[base]{regular expression}.  Only file names
    which match the regular expression will be returned.}

\item{full.names}{a logical value.  If \code{TRUE}, the directory
    path is prepended to the file names to give a relative file path.
    If \code{FALSE}, the file names (rather than paths) are returned.}

\item{ignore.case}{logical.  Should pattern-matching be case-insensitive?}

\item{...}{Additional parameters passed to \code{\link[=list.files]{list.files()}}}
}
\description{
Get the path for a package-specific cache directory with
\link[rappdirs:user_cache_dir]{rappdirs::user_cache_dir}, check for the existence of a data directory,
optionally create a new directory at the provided path location.
}
